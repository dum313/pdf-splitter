# üì¶ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
import os  # –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏ –∏ –ø—É—Ç—è–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–æ–∑–¥–∞—ë–º –ø–∞–ø–∫–∏, –ø–æ–ª—É—á–∞–µ–º –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤)
import argparse  # –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
import re  # –†–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–º ‚Äî –ø–æ–∏—Å–∫ –Ω—É–∂–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ (ID) —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π
import sys
import pytesseract  # –≠—Ç–æ OCR ‚Äî —É–º–µ–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–∫–∞–Ω—ã PDF)
from pdf2image import convert_from_path  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç PDF-—Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
from PyPDF2 import PdfReader, PdfWriter  # –ß—Ç–µ–Ω–∏–µ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ PDF-—Ñ–∞–π–ª–æ–≤
from tkinter import Tk, filedialog  # –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞

# üîß –ß–∏—Ç–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
parser = argparse.ArgumentParser(description="Split PDF by pages using OCR")
parser.add_argument(
    "--poppler-path",
    dest="poppler_path",
    help="–ü—É—Ç—å –∫ –±–∏–Ω–∞—Ä–Ω–∏–∫–∞–º poppler (–µ—Å–ª–∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ)",
)
args = parser.parse_args()

# üß≠ –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ poppler (—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è pdf2image) ‚Äî –∏—â–µ–º –µ–≥–æ —Ä—è–¥–æ–º —Å final.exe
default_poppler = os.path.join(
    os.path.dirname(__file__),  # –ü–æ–ª—É—á–∞–µ–º –ø–∞–ø–∫—É, –≥–¥–µ –ª–µ–∂–∏—Ç —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏–ª–∏ .exe
    "poppler-24.08.0",          # –≠—Ç–æ –ø–∞–ø–∫–∞, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –ø–æ–ª–æ–∂–∏–ª —Ä—è–¥–æ–º —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π
    "Library",
    "bin",                       # –¢–∞–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω—É–∂–Ω—ã–π —Ñ–∞–π–ª pdfinfo.exe
)
poppler_path = args.poppler_path or default_poppler

# üîï –û—Ç–∫–ª—é—á–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ tkinter (–æ–Ω–æ –Ω–∞–º –Ω–µ –Ω—É–∂–Ω–æ, —Ö–æ—Ç–∏–º —Ç–æ–ª—å–∫–æ –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞)
Tk().withdraw()

# üìÇ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ PDF-—Ñ–∞–π–ª–∞
source_pdf = filedialog.askopenfilename(
    title="–í—ã–±–µ—Ä–∏—Ç–µ PDF-—Ñ–∞–π–ª –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏",
    filetypes=[("PDF —Ñ–∞–π–ª—ã", "*.pdf")]  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≤—ã–±–æ—Ä —Ç–æ–ª—å–∫–æ PDF-—Ñ–∞–π–ª–∞–º–∏
)

# üö´ –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–û—Ç–º–µ–Ω–∞" –∏–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–ª —Ñ–∞–π–ª ‚Äî –≤—ã—Ö–æ–¥–∏–º –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã
if not source_pdf:
    print("–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")
    sys.exit()

# üìÅ –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ –∏–º—è –≤—ã—Ö–æ–¥–Ω–æ–π –ø–∞–ø–∫–∏
pdf_name = os.path.splitext(os.path.basename(source_pdf))[0]

# üõ†Ô∏è –°–æ–∑–¥–∞—ë–º –≤—ã—Ö–æ–¥–Ω—É—é –ø–∞–ø–∫—É —Ä—è–¥–æ–º —Å –∏—Å—Ö–æ–¥–Ω—ã–º PDF-—Ñ–∞–π–ª–æ–º
output_folder = os.path.join(os.path.dirname(source_pdf), pdf_name)
os.makedirs(output_folder, exist_ok=True)  # –ï—Å–ª–∏ –ø–∞–ø–∫–∏ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞—Å—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å ‚Äî –Ω–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ

# üìñ –ß–∏—Ç–∞–µ–º PDF-—Ñ–∞–π–ª
reader = PdfReader(source_pdf)

# üñºÔ∏è –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º PDF –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (300 dpi ‚Äî –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –¥–ª—è OCR)
images = convert_from_path(source_pdf, dpi=300, poppler_path=poppler_path)

# üîç –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ ID (–Ω–∞–ø—Ä–∏–º–µ—Ä, CICU6332694P)
# –®–∞–±–ª–æ–Ω: 4 –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã, –æ–ø—Ü. –µ—â—ë 1 –±—É–∫–≤–∞, 7 —Ü–∏—Ñ—Ä –∏ –±—É–∫–≤–∞ P
flex_pattern = re.compile(r"([A-Z]{4})([A-Z]?)(\d{7})([P])")

# ‚úÇÔ∏è –û–±–ª–∞—Å—Ç—å, –≥–¥–µ –æ–±—ã—á–Ω–æ –Ω–∞–ø–∏—Å–∞–Ω ID –Ω–∞ —Å–∫–∞–Ω–µ (—Å–Ω–∏–∑—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
# –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ–¥–æ–±—Ä–∞–Ω—ã –≤—Ä—É—á–Ω—É—é: (–ª–µ–≤–∞—è, –≤–µ—Ä—Ö–Ω—è—è, –ø—Ä–∞–≤–∞—è, –Ω–∏–∂–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞)
crop_area = (0, 1900, 1000, 2300)

# ‚ñ∂Ô∏è –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ –ø–æ—Ä—è–¥–∫—É
i = 0
while i < len(reader.pages):
    # üñºÔ∏è –ë–µ—Ä—ë–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –≤—ã—Ä–µ–∑–∞–µ–º –Ω—É–∂–Ω—É—é –æ–±–ª–∞—Å—Ç—å
    image = images[i]
    cropped_image = image.crop(crop_area)

    # üî° –†–∞—Å–ø–æ–∑–Ω–∞—ë–º —Ç–µ–∫—Å—Ç (OCR) –∏ –æ—á–∏—â–∞–µ–º –æ—Ç –º—É—Å–æ—Ä–∞
    text = pytesseract.image_to_string(cropped_image)
    text_clean = re.sub(r"[\s()\-\n]+", "", text.upper())  # –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã –∏ —Å–∏–º–≤–æ–ª—ã

    # üß† –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ ID –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    match = flex_pattern.search(text_clean)
    if match:
        part1, extra_letter, part2, last_letter = match.groups()
        identifier = part1 + part2  # –ü–æ–ª—É—á–∞–µ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä: CICU6332694
    else:
        identifier = f"unknown_{i+1}"  # –ï—Å–ª–∏ ID –Ω–µ –Ω–∞–π–¥–µ–Ω
        print(f"‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ {i+1}: ID –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Üí '{text_clean}'")

    # üìÑ –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π PDF-—Ñ–∞–π–ª
    writer = PdfWriter()
    writer.add_page(reader.pages[i])  # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É

    # üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏–¥—ë—Ç –ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ—Å–ª–µ
    if i + 1 < len(reader.pages):
        next_image = images[i + 1].crop(crop_area)
        next_text = pytesseract.image_to_string(next_image)
        next_clean = re.sub(r"[\s()\-\n]+", "", next_text.upper())

        # –ï—Å–ª–∏ ID –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –∫–∞–∫ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ
        if not flex_pattern.search(next_clean):
            writer.add_page(reader.pages[i + 1])
            i += 2  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ 2 —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤–ø–µ—Ä—ë–¥
        else:
            i += 1  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    else:
        i += 1  # –ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞

    # üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π PDF
    output_path = os.path.join(output_folder, f"{identifier}.pdf")
    with open(output_path, "wb") as out_pdf:
        writer.write(out_pdf)

    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: {output_path}")
