# üì¶ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
import os
import re
import sys
import pytesseract
from pdf2image import convert_from_path
from PyPDF2 import PdfReader, PdfWriter
from tkinter import Tk, filedialog


def main():
    """Split PDF into separate files using OCR for naming."""
    # üß≠ –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ poppler (—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è pdf2image)
    poppler_path = os.path.join(
        os.path.dirname(__file__),
        "poppler-24.08.0",
        "Library",
        "bin",
    )
    # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è POPPLER_PATH, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë
    env_poppler = os.getenv("POPPLER_PATH")
    if env_poppler:
        poppler_path = env_poppler

    # –ï—Å–ª–∏ –∑–∞–¥–∞–Ω –ø—É—Ç—å –∫ Tesseract —á–µ—Ä–µ–∑ TESSERACT_CMD, –ø–µ—Ä–µ–¥–∞—ë–º –µ–≥–æ pytesseract
    env_tesseract = os.getenv("TESSERACT_CMD")
    if env_tesseract:
        pytesseract.pytesseract.tesseract_cmd = env_tesseract

    # üîï –û—Ç–∫–ª—é—á–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ tkinter (–æ–Ω–æ –Ω–∞–º –Ω–µ –Ω—É–∂–Ω–æ)
    Tk().withdraw()

    # üìÇ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ PDF-—Ñ–∞–π–ª–∞
    source_pdf = filedialog.askopenfilename(
        title="–í—ã–±–µ—Ä–∏—Ç–µ PDF-—Ñ–∞–π–ª –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏",
        filetypes=[("PDF —Ñ–∞–π–ª—ã", "*.pdf")],
    )

    # üö´ –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–û—Ç–º–µ–Ω–∞" –∏–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–ª —Ñ–∞–π–ª ‚Äî –≤—ã—Ö–æ–¥–∏–º
    if not source_pdf:
        print("–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")
        sys.exit()

    # üìÅ –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
    pdf_name = os.path.splitext(os.path.basename(source_pdf))[0]

    # üõ†Ô∏è –°–æ–∑–¥–∞—ë–º –≤—ã—Ö–æ–¥–Ω—É—é –ø–∞–ø–∫—É —Ä—è–¥–æ–º —Å –∏—Å—Ö–æ–¥–Ω—ã–º PDF-—Ñ–∞–π–ª–æ–º
    output_folder = os.path.join(os.path.dirname(source_pdf), pdf_name)
    os.makedirs(output_folder, exist_ok=True)

    # üìñ –ß–∏—Ç–∞–µ–º PDF-—Ñ–∞–π–ª
    reader = PdfReader(source_pdf)

    # üñºÔ∏è –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º PDF –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    images = convert_from_path(source_pdf, dpi=300, poppler_path=poppler_path)

    # üîç –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ ID (–Ω–∞–ø—Ä–∏–º–µ—Ä, CICU6332694P)
    flex_pattern = re.compile(r"([A-Z]{4})([A-Z]?)(\d{7})([P])")

    # ‚úÇÔ∏è –û–±–ª–∞—Å—Ç—å, –≥–¥–µ –æ–±—ã—á–Ω–æ –Ω–∞–ø–∏—Å–∞–Ω ID –Ω–∞ —Å–∫–∞–Ω–µ (—Å–Ω–∏–∑—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
    crop_area = (0, 1900, 1000, 2300)

    # ‚ñ∂Ô∏è –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ –ø–æ—Ä—è–¥–∫—É
    i = 0
    while i < len(reader.pages):
        # üñºÔ∏è –ë–µ—Ä—ë–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –≤—ã—Ä–µ–∑–∞–µ–º –Ω—É–∂–Ω—É—é –æ–±–ª–∞—Å—Ç—å
        image = images[i]
        cropped_image = image.crop(crop_area)

        # üî° –†–∞—Å–ø–æ–∑–Ω–∞—ë–º —Ç–µ–∫—Å—Ç (OCR) –∏ –æ—á–∏—â–∞–µ–º –æ—Ç –º—É—Å–æ—Ä–∞
        text = pytesseract.image_to_string(cropped_image)
        text_clean = re.sub(r"[\s()\-\n]+", "", text.upper())

        # üß† –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ ID –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        match = flex_pattern.search(text_clean)
        if match:
            part1, extra_letter, part2, last_letter = match.groups()
            identifier = part1 + part2
        else:
            identifier = f"unknown_{i + 1}"
            print(f"‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ {i+1}: ID –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Üí '{text_clean}'")

        # üìÑ –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π PDF-—Ñ–∞–π–ª
        writer = PdfWriter()
        writer.add_page(reader.pages[i])

        # üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏–¥—ë—Ç –ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ—Å–ª–µ
        if i + 1 < len(reader.pages):
            next_image = images[i + 1].crop(crop_area)
            next_text = pytesseract.image_to_string(next_image)
            next_clean = re.sub(r"[\s()\-\n]+", "", next_text.upper())

            # –ï—Å–ª–∏ ID –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –∫–∞–∫ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ
            if not flex_pattern.search(next_clean):
                writer.add_page(reader.pages[i + 1])
                i += 2
            else:
                i += 1
        else:
            i += 1

        # üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π PDF
        output_path = os.path.join(output_folder, f"{identifier}.pdf")
        with open(output_path, "wb") as out_pdf:
            writer.write(out_pdf)

        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: {output_path}")


if __name__ == "__main__":
    main()
