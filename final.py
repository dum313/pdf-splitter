# üì¶ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
import os  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏, –ø—É—Ç—è–º–∏ –∏ –ø–∞–ø–∫–∞–º–∏
import re  # –î–ª—è –ø–æ–∏—Å–∫–∞ ID —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π
import pytesseract  # –î–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö (OCR)
from pdf2image import convert_from_path  # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ PDF –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
from PyPDF2 import PdfReader, PdfWriter  # –î–ª—è —á—Ç–µ–Ω–∏—è –∏ —Å–æ–∑–¥–∞–Ω–∏—è PDF-—Ñ–∞–π–ª–æ–≤
from tkinter import Tk, filedialog  # –î–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞

# üîß –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ Poppler (–æ–Ω –∏–¥—ë—Ç –≤ –∫–æ–º–ø–ª–µ–∫—Ç–µ —Å —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–æ–º)
# –ü–∞–ø–∫–∞ poppler-24.08.0 –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä—è–¥–æ–º —Å final.exe
poppler_path = os.path.join(
    os.path.dirname(__file__),  # –ü–æ–ª—É—á–∞–µ–º –ø–∞–ø–∫—É, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è .exe
    "poppler-24.08.0",
    "Library",
    "bin",  # –í–Ω—É—Ç—Ä–∏ –Ω–µ—ë –∏—â–µ–º bin —Å pdfinfo.exe
)

# üîπ –û—Ç–∫–ª—é—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –æ–∫–Ω–æ tkinter (—á—Ç–æ–±—ã –Ω–µ –ø–æ—è–≤–ª—è–ª–æ—Å—å)
Tk().withdraw()

# üîπ –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤—ã–±–æ—Ä–∞ PDF-—Ñ–∞–π–ª–∞
source_pdf = filedialog.askopenfilename(
    title="–í—ã–±–µ—Ä–∏—Ç–µ PDF-—Ñ–∞–π–ª –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏",  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞
    filetypes=[("PDF —Ñ–∞–π–ª—ã", "*.pdf")],  # –û–≥—Ä–∞–Ω–∏—á–∏–º –≤—ã–±–æ—Ä —Ç–æ–ª—å–∫–æ PDF
)

# ‚ùå –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–∫—Ä—ã–ª –æ–∫–Ω–æ –∏–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–ª —Ñ–∞–π–ª
if not source_pdf:
    print("–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ.")
    exit()

# üìÅ –°–æ–∑–¥–∞—ë–º –≤—ã—Ö–æ–¥–Ω—É—é –ø–∞–ø–∫—É –≤ —Ç–æ–π –∂–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –≥–¥–µ –±—ã–ª PDF
# –ü—Ä–∏–º–µ—Ä: C:\Docs\fail1.pdf ‚Üí C:\Docs\fail1\
pdf_name = os.path.splitext(os.path.basename(source_pdf))[0]  # –ë–µ—Ä—ë–º –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ .pdf
output_folder = os.path.join(
    os.path.dirname(source_pdf), pdf_name
)  # –ü–∞–ø–∫–∞ —Ä—è–¥–æ–º —Å –∏—Å—Ö–æ–¥–Ω—ã–º PDF
os.makedirs(output_folder, exist_ok=True)  # –°–æ–∑–¥–∞—ë–º –µ—ë (–µ—Å–ª–∏ –µ—â—ë –Ω–µ—Ç)

# üìñ –ó–∞–≥—Ä—É–∂–∞–µ–º PDF-—Ñ–∞–π–ª
reader = PdfReader(source_pdf)

# üñºÔ∏è –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º PDF –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (300 dpi = —Ö–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ)
# –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ Poppler
images = convert_from_path(source_pdf, dpi=300, poppler_path=poppler_path)

# üîé –†–µ–≥—É–ª—è—Ä–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ ID ‚Äî —Ñ–æ—Ä–º–∞—Ç:
# 4 –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã, –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –±—É–∫–≤–∞, 7 —Ü–∏—Ñ—Ä, –±—É–∫–≤–∞ "P"
# –ü—Ä–∏–º–µ—Ä: RPSU6332694P –∏–ª–∏ CICU6332694P
flex_pattern = re.compile(r"([A-Z]{4})([A-Z]?)(\d{7})([P])")

# üßæ –û–±–ª–∞—Å—Ç—å, –≥–¥–µ –Ω–∞ —Å–∫–∞–Ω–∞—Ö –æ–±—ã—á–Ω–æ –Ω–∞–ø–∏—Å–∞–Ω —ç—Ç–æ—Ç ID (–æ–±—Ä–µ–∑–∞–µ–º –Ω–∏–∂–Ω—é—é —á–∞—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
crop_area = (0, 1900, 1000, 2300)  # (–ª–µ–≤–∞—è, –≤–µ—Ä—Ö–Ω—è—è, –ø—Ä–∞–≤–∞—è, –Ω–∏–∂–Ω—è—è –≥—Ä–∞–Ω–∏—Ü—ã)

# ‚ñ∂Ô∏è –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ –ø–æ—Ä—è–¥–∫—É
i = 0
while i < len(reader.pages):
    # --- –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É ---
    image = images[i]  # –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    cropped_image = image.crop(crop_area)  # –í—ã—Ä–µ–∑–∞–µ–º –Ω–∏–∂–Ω—é—é —á–∞—Å—Ç—å (–≥–¥–µ ID)
    text = pytesseract.image_to_string(
        cropped_image
    )  # –†–∞—Å–ø–æ–∑–Ω–∞—ë–º —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ Tesseract
    text_clean = re.sub(
        r"[\s()\-\n]+", "", text.upper()
    )  # –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã, —Å–∏–º–≤–æ–ª—ã –∏ –¥–µ–ª–∞–µ–º –∑–∞–≥–ª–∞–≤–Ω—ã–º

    # üîç –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ ID
    match = flex_pattern.search(text_clean)
    if match:
        part1, extra_letter, part2, last_letter = match.groups()
        identifier = part1 + part2  # –ù–∞–ø—Ä–∏–º–µ—Ä: CICU6332694
    else:
        identifier = f"unknown_{i+1}"  # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ ID
        print(f"–°—Ç—Ä.{i+1}: ID –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Üí '{text_clean}'")

    # üìÑ –°–æ–∑–¥–∞—ë–º PDF-—Ñ–∞–π–ª, –∫—É–¥–∞ –±—É–¥–µ–º —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É (–∏–ª–∏ –ø–∞—Ä—É)
    writer = PdfWriter()
    writer.add_page(reader.pages[i])  # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É

    # --- –ü—Ä–æ–≤–µ—Ä–∏–º, –Ω—É–∂–Ω–∞ –ª–∏ —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ---
    if i + 1 < len(reader.pages):
        # –í—ã—Ä–µ–∑–∞–µ–º –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞—ë–º —Ç–µ–∫—Å—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        next_image = images[i + 1].crop(crop_area)
        next_text = pytesseract.image_to_string(next_image)
        next_clean = re.sub(r"[\s()\-\n]+", "", next_text.upper())

        # –ï—Å–ª–∏ ID –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî —ç—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏)
        if not flex_pattern.search(next_clean):
            writer.add_page(reader.pages[i + 1])  # –î–æ–±–∞–≤–ª—è–µ–º –∏ –µ—ë
            i += 2  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ä–∞–∑—É 2 —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        else:
            i += 1  # –ò–¥—ë–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –æ—Ç–¥–µ–ª—å–Ω–æ
    else:
        i += 1  # –ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞

    # üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –≤—ã—Ö–æ–¥–Ω—É—é –ø–∞–ø–∫—É
    output_path = os.path.join(output_folder, f"{identifier}.pdf")
    with open(output_path, "wb") as out_pdf:
        writer.write(out_pdf)

    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: {output_path}")
